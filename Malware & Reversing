Malware & Reversing
Interesting malware

Conficker.

Conficker, also known as Downup, Downadup, or Kido, is a notorious computer worm that first emerged in 2008. It quickly spread across networks, infecting computers and creating a massive botnet. The worm primarily targets computers running Microsoft Windows operating systems and takes advantage of vulnerabilities in the Windows OS to propagate and execute malicious activities. Here's a detailed explanation of how Conficker works and propagates:

**1. ** Initial Infection:
Conficker spreads through various methods, including exploiting a vulnerability in the Windows Server service (MS08-067). This vulnerability allows the worm to execute arbitrary code on remote computers without authentication. Conficker can exploit this vulnerability by sending a specially crafted remote procedure call (RPC) to the target system, allowing it to gain unauthorized access.

**2. ** Self-Replication:
Once a computer is infected, Conficker copies itself to the target system and assigns a random name. It also tries to disable security services and blocks access to security-related websites, making it difficult to download patches or security tools to remove the infection.

**3. ** Autorun and Network Propagation:
Conficker takes advantage of the Windows Autorun feature, which automatically runs programs when external devices like USB drives are connected to a computer. It places a copy of itself in the root folder of removable drives. When an infected USB drive is connected to another computer, the worm automatically executes and spreads to that system. It can also spread over network shares by copying itself to accessible network locations.

**4. ** P2P Communication:
Conficker includes a peer-to-peer (P2P) communication mechanism that allows infected computers to communicate with each other. This P2P network helps the worm update itself, download additional payloads, and receive commands from a remote controller. This communication method makes it harder to trace and control the botnet because infected computers can share information and updates without relying on a central server.

**5. ** Domain Generation Algorithm (DGA):
To receive updates and instructions, Conficker generates a large number of pseudo-random domain names using a sophisticated algorithm. Every day, it generates a new set of domain names. The authors of Conficker can register any of these domains and use them to control the infected machines, update the worm, or install additional malware. This technique makes it challenging for security researchers to predict or block the domains that the worm will attempt to contact.

**6. ** Evolution and Variants:
Conficker has several variants, each with improvements to evade detection and removal. These variants employ different encryption techniques, packers, and obfuscation methods to make it difficult for antivirus programs to identify and eliminate the worm.

**7. ** Payloads and Botnet Control:
While the primary purpose of Conficker is to create a massive botnet, it can also download and execute additional payloads. These payloads might include spyware, keyloggers, or other types of malware, allowing the attackers to steal sensitive information, launch distributed denial-of-service (DDoS) attacks, or perform other malicious activities.

In summary, Conficker spreads by exploiting Windows vulnerabilities, using Autorun and network propagation, establishing P2P communication, generating random domain names, evolving through variants, and executing various payloads. Its ability to continuously evolve and adapt makes it a significant challenge for security researchers and organizations to detect, remove, and mitigate its impact.
Morris worm.
Zeus malware.
Stuxnet.
Wannacry.
CookieMiner.
Sunburst.
Malware features

Various methods of getting remote code execution.
Domain-flux.
Fast-Flux.
Covert C2 channels.
Evasion techniques (e.g. anti-sandbox).
Process hollowing.
Mutexes.
Multi-vector and polymorphic attacks.
RAT (remote access trojan) features.
Decompiling/ reversing

Obfuscation of code, unique strings (you can use for identifying code).
IdaPro, Ghidra.
Static / dynamic analysis

Describe the differences.
Virus total.
Reverse.it.
Hybrid Analysis.
