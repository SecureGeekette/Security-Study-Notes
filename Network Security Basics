
Common ports involving security, what are the risks and mitigations?

1. Port 22 (SSH): Secure Shell protocol is used for remote access to servers.
Port 3389 (Remote Desktop Protocol) - similar to SSH, but used for GUI based remote access instead of SSH's command line (risks and mitigations are same)

Risk: Unauthorized access to the system via brute-force attacks, password guessing or sniffing.
Mitigations: 
- If possible, disable password based authentication and use key based auth. If not possible, enforce strong and unique passwords.
- Implement Multi Factor Authentication (MFA).
- Implement rate limiting and account lockout policies (to prevent against brute force attacks)
- Limit SSH access to specific IP addresses or networks.
- Log and monitor SSH login attempts for suspicious activities - block IP addresses after multiple failed logon attempts.
- Change the default SSH port to reduce exposure to automated attacks.
- Disable root login via SSH to reduce attack surface.

2. Port 23 (Telnet): Unencrypted Text based protocol that allows users to remotely access systems.

Risk: Does not require authentication, anyone who can connect to port 23 can gain access - elevates risk of anauthorized access.
Mitigations:
- If possible, disable telnet and utilize SSH instead.
- Restrict Telnet traffic to trusted internal networks, preventing external access to port 23 (using firewalls, security groups, network access control lists).
- Log and monitor Telnet usage to detect and prevent unauthorized usage

3. Port 25 (Simple Mail Transfer Protocol): protocol used to send email

Risk: Email spoofing, phishing, spam and malware distribution
Mitigations:
- Use email filtering services and antivirus software to detect and block malicious emails.
- Implement SPF (sender policy framework)
- Implment DKIM (Domain Keys Identified Mail)
- Implement DMARC (Domain based message authentication, reporting and conformance)

4. Port 53 (Domain Name System)

Risk: DNS Spoofing, DDoS attacks
Mitigations:
- Implement DNSSEC (DNS Security Extensions) for your domain to ensure data integrity and authenticity in DNS responses - basically sign DNS data with cryptographic signatures
- Use rate limiting and employ DNS filtering (block access to malicious or phishing websites) to prevent against DDoS
- Chose a reputable DNS Hosting provider
- Configure firewalls to allow DNS traffic only trusted sources

5. Port 80 (HTTP) or Port 443 (HTTPS)

Risk: Web vulnerabilities, Data interception
Mitigations:
- Implement web application firewalls (WAFs) to filter malicious traffic and protect against attacks like SQL injection and XSS (Cross Site Scripting).
- Regularly update and patch web applications and web servers.
- Use HTTPS (TLS) to encrypt data in transit, protecting against eavesdropping/ man-in-the-middle attacks.

6. Port 139, 445 (SMB - Server Message Block) - network file sharing protocol used to access and manage files and resources on remote computers.

Risk: remote code excution, ransomware, lateral movement
- Keep systems patched and up-to-date against known vulnerabilities
- use strong, unique passwords and implement mandatory MFA
- restrict SMB access to trusted networks and use firewalls to block unnecessary SMB traffic
- implement network segmentation to limit the impact of lateral movement

7. Port 1521 (Oracle Database), Port 3306 (MySQL) or port 5432 (PostgreSQL)

Risk: Data Breaches, unauthorized access
Mitigations:
- Keep database software patched and up-to-date against known vulnerabilities
- Implement strong access controls limiting users privilege to the minimum necessary
- Limit database access to trusted hosts and use firewalls to restrict access
- Encrypt sensitive data at rest and transit
- Use prepared statements and parameterized queries (for SQL related databases) to prevent SQL injection attacks in code
- Use strong, unique passwords




